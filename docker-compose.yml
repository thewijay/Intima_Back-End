services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
      - static_volume:/usr/src/app/staticfiles
    ports:
      - '8000:8000'
    env_file:
      - .env.dev
    depends_on:
      db:
        condition: service_healthy
      weaviate:
        condition: service_started

  db:
    image: postgres:15
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_NAME:-intimapsql_db}
    env_file:
      - .env.dev
    ports:
      - '${DB_PORT:-5433}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 5s
      timeout: 5s
      retries: 5

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.3
    container_name: weaviate_db
    ports:
      - '8080:8080'
      - '50051:50051'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      CLUSTER_HOSTNAME: 'node1'
      ENABLE_API_BASED_MODULES: 'true'
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: '${WEAVIATE_ADMIN_KEY},${WEAVIATE_USER_KEY}'
      AUTHENTICATION_APIKEY_USERS: 'admin,user'
      AUTHORIZATION_ENABLE_RBAC: 'true'
      AUTHORIZATION_RBAC_ROOT_USERS: 'admin'
      AUTHORIZATION_ADMINLIST_READONLY_USERS: 'user'
    env_file:
      - .env.dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 10s
      timeout: 5s
      retries: 5



volumes:
  postgres_data:
  weaviate_data:
  static_volume:
